package liczby;

/**
 * Reprezentacja cyfr. uzywana do uczenia perceptronu
 * @author Jacek Pietras
 */
public class Number {
	static int n=100; 
	Algorithm[] alg=new Algorithm[n];
	double[][] weight =new double[n][35]; //wagi
	//tablice reprezentujace cyfry
	static int[] xxx={ 1,-1,1,-1,-1,
					  -1, 1,-1,-1,-1,
		               1,-1,1,-1,-1,
		              -1,-1,1,1,-1,
		              -1,-1,1,-1,1,
		              -1,-1,1,-1,1,
		              -1,-1,1,-1,-1};
	
	static int[] one={ -1,-1,1,-1,-1,
        			   -1, 1,1,-1,-1,
			            1,-1,1,-1,-1,
			           -1,-1,1,-1,-1,
			           -1,-1,1,-1,-1,
			           -1,-1,1,-1,-1,
			           -1,-1,1,-1,-1};
	
	static int[] two={-1,1,1,1,-1,
			   1,-1,-1,-1,1,
			  -1,-1,-1,1,-1,
			  -1,-1,1,-1,-1,
			  -1,1,-1,-1,-1,
			   1,-1,-1,-1,-1,
			   1,1,1,1,1};
	
	static int[] three={
		         1,1,1,1,1,
			    -1,-1,-1,1,-1,
			     -1,-1,1,-1,-1,
			     -1,-1,-1,1,-1,
			     -1,-1,-1,-1,1,
			      1,-1,-1,-1,1,
			     -1,1,1,1,-1};
	
	static int[] four={
		         -1,-1,1,-1,1,
		        -1,1,-1,-1,1,
		         1,-1,-1,-1,1,
		         1 ,1,1,1,1,
		        -1,-1,-1,-1,1,
		        -1,-1,-1,-1,1,
		        -1,-1,-1,-1,1};
	 
	static int[] five={
		        -1,1,1,1,1,
		        1,-1,-1,-1,-1,
		        1,-1,-1,-1,-1,
		        1,1,1,1,-1,
		       -1,-1,-1,-1,1,
		       -1,-1,-1,-1,1,
		       1,1,1,1,-1};
	
	static int[] six={
		              -1,1,1,1,-1,
		              1,-1,-1,-1,1,
		              1,-1,-1,-1,-1,
		              1,1,1,1,-1,
		              1,-1,-1,-1,1,
		              1,-1,-1,-1,1,
		              1,1,1,1,-1}; //6 bez zabóżeń

	static int[] seven={ 1, 1, 1, 1,1,
		        		-1,-1,-1,1,-1,
		        		-1,-1,1,-1,-1,
		        		-1,1,-1,-1,-1,
		        		-1,1,-1,-1,-1,
		        		-1,1,-1,-1,-1,
		        		-1,1,-1,-1,-1};
	
	static int[] eight={-1,1,1,1,-1,
		          1,-1,-1,-1,1,
		          1,-1,-1,-1,1,
		          -1,1,1,1,-1,
		          1,-1,-1,-1,1,
		          1,-1,-1,-1,1,
		          -1,1,1,1,-1};

	static int[] nine={-1,1,1,1,-1,
	                   1,-1,-1,-1,1,
	                   1,-1,-1,-1,1,
	                  -1,1,1,1,1,
	                  -1,-1,-1,-1,1,
	                   -1,-1,-1,-1,1,
	                    1,1,1,1,-1};

	static int[] zero={
		        -1,1,1,1,-1,
	            1,-1,-1,-1,1,
	            1,-1,-1,-1,1,
	            1,-1,-1,-1,1,
	            1,-1,-1,-1,1,
	            1,-1,-1,-1,1,
	           -1,1,1,1,-1};
	
	 static int[][] numbers={zero,one,two,three,four,five,six,seven,eight,nine};
	//baza przykładów
	public Number(){
	 
	 for(int i=0;i<n;i++){
	   alg[i]=new Algorithm(numbers[i%10]);
	  for(int j=0;j<35;j++){
		  weight[i][j]=alg[i].pocketAlg(alg[i].E, alg[i].C,Algorithm.N)[j];
	   } 
	}
	 
	 
	}
	
}
